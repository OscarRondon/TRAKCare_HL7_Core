^MAC^Save for Source Control^^~Format=IRIS.S~^RAW
%RO
HL7SiteQLDRes^MAC^^^0
HL7SiteQLDRes // ML 24/07/03 ; HL7 interface : result processing - Queensland Health
SrcVer ;; $Id: //trak/main/releases/T2020/1/CLXX/rtn/hl7/HL7SiteQLDRes.rtn#1 $
	quit
 
Check	;; results in data array
Update	set $ztrap="Error^"_$zname kill reject,rejected
 
	// get patient
	set cnt1=0 for  set cnt1=$order(^TMP("HL7",$job,cnt1)) quit:cnt1=""  do  if SQLCODE quit
	.if '$data(^TMP("HL7",$job,cnt1,"PID")) quit
	.set reject=""
	. // extract internal/external registration numbers
	.set numbers=$$RegNum^HL7Common2(.reject,"R01")
	.set RegMrn=$piece(numbers,"|"),intRegMrn=$piece(numbers,"|",2)
	.if reject'="" do Reject^HL7Reject(reject,"R"),AckNak^HL7AckNak("AR",reject,$piece(reject("Detail"),"~"),$piece(reject("Detail"),"~",2)) quit
	. // check if merged
	.set merge="",masternum=$$patto^CPAPerson(intRegMrn)
	.if masternum'=intRegMrn do
	..set merge="Y",intRegMrn=masternum,RegMrn=$$extRegMrn^HL7Common2(intRegMrn)
 
	. // get episode
	.set (FoundPV1,AdmNum,intAdmNum)=""
	.set cnt2=0 for  set cnt2=$order(^TMP("HL7",$job,cnt1,cnt2)) quit:cnt2=""  do  quit:reject'=""
	..if 'FoundPV1,'$data(^TMP("HL7",$job,cnt1,cnt2,"PV1")) quit
	..if 'FoundPV1 do  set FoundPV1=cnt2
	...set AdmNum=$piece($get(^TMP("HL7",$job,cnt1,cnt2,"PV1",19)),"^")
 
	..set (TestStatus,parent)=""
	..set cnt3=0 for x=0:1 set cnt3=$order(^TMP("HL7",$job,cnt1,cnt2,cnt3)) quit:cnt3=""  do  if SQLCODE quit
	...if '$data(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR")) quit
 
	... // check patient details
	...if merge'="Y",$$PatCheck^HL7Common3(intRegMrn,RegMrn) do  quit
	....do Reject^HL7Reject(reject,"R"),AckNak^HL7AckNak("AR",reject,$piece(reject("Detail"),"~"),$piece(reject("Detail"),"~",2))
 
	...set reject=""
	... // check order details
	...set numbers=$$OrderNumExtract^HL7Common5(cnt1,cnt2,cnt3)
	...set OrdNum=$piece(numbers,"|"),FillerNum=$piece(numbers,"|",2)
	...do OrdNum^HL7Common2("Y",.reject) if reject'="" quit
 
	...set resultstatus=##class(websys.StandardTypeItem).GetDescriptionFromCode("ResultType",$piece(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",25),"^"))
	...if SQLCODE do  quit
	....set reject="Result status "_$piece(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",25),"^")_" received on Order Id "_OrdNum_", test "_$piece(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",4),"^")_" ("_$piece(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",4),"^",2)_") does not exist in MedTrak"
	....do Reject^HL7Reject(reject,"N") set (reject,SQLCODE)=""
 
	... // extract ordering care provider
	...kill provider set drfound=""
	...set i="" for  set i=$order(^TMP("HL7",$job,cnt1,cnt2,"ORC",12,i)) quit:i=""  do  if drfound'="" quit
	....set OrderingDr=$get(^TMP("HL7",$job,cnt1,cnt2,"ORC",12,i)) if $piece(OrderingDr,"^")="" quit
	....set doctor=$piece(OrderingDr,"^"),drsystem=$piece(OrderingDr,"^",9) if drsystem="MEDTRAK" set drsystem=""
	....for drtype="C","R" do  if drfound'="" quit
	.....set drfound=$$Provider^HL7Common5(doctor,drsystem,"","",drtype,"I")
	.....if drfound'="" set provider(drtype)=$piece(drfound,$char(1)) if drtype="R" do
	......if $piece(drfound,$char(1),2)'="" set provider("R-CLIN")=$piece(drfound,$char(1),2)
 
	...if '$data(provider) do
	....set i="" for  set i=$order(^TMP("HL7",$job,cnt1,cnt2,"ORC",12,i)) quit:i=""  do
	.....set OrderingDr=$get(^TMP("HL7",$job,cnt1,cnt2,"ORC",12,i)) if $piece(OrderingDr,"^",1)'="" set rejected("dr",$piece(OrderingDr,"^",1))=$piece(OrderingDr,"^",3)
	....if '$data(rejected) set reject="No ordering or referring provider sent on Order Id "_OrdNum
	....if $data(rejected) set reject="Ordering or referring provider " do  set reject=reject_" sent on Order Id "_OrdNum_", not found in MedTrak"
	.....set i="" for  set i=$order(rejected("dr",i)) quit:i=""  set reject=reject_i_" ("_rejected("dr",i)_") "_$select($order(rejected("dr",i))="":"",1:", ")
	....do Reject^HL7Reject(reject,"R") set (reject,SQLCODE)=""
 
	...kill date,time
	... // extract required date/time's to check
	...for i=44,45 set datetime=$get(^TMP("HL7",$job,cnt1,FoundPV1,"PV1",i)),date($select(i=44:"ADM",1:"DIS"))=$extract(datetime,1,8),time($select(i=44:"ADM",1:"DIS"))=$extract(datetime,9,12)
	...for i=6,7,14,22 set datetime=$get(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",i)),date($select(i=6:"REQ",i=7:"COL",i=14:"REC",1:"AUTH"))=$extract(datetime,1,8),time($select(i=6:"REQ",i=7:"COL",i=14:"REC",1:"AUTH"))=$extract(datetime,9,12)
	...set datetime=$piece($get(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",27)),"^",4),date("ST")=$extract(datetime,1,8),time("ST")=$extract(datetime,9,12)
	...for datetype="ADM","AUTH","DIS","REQ","COL","REC","ST" do
	....if $data(date(datetype)) set date(datetype)=$select(date(datetype)?8N:$$DateConv^HL7Common2(.reject,"EI",date(datetype)),1:"")
	....if $data(time(datetype)) set time(datetype)=$select(time(datetype)?4N:$$TimeConv^HL7Common2("EI",$extract(time(datetype),1,2)_":"_$extract(time(datetype),3,4)),1:"")
	....if datetype="ST",+$get(time(datetype))="0" set time(datetype)="0"
	....if datetype="ST" set date("CREATE")=$get(date("ST")),time("CREATE")=$get(time("ST"))
 
	... // check if admission exists
	...do AdmNum^HL7Common2(.reject) if reject'="" quit
 
	... // unsolicited result - find current admission number
	...if AdmNum="none" do  if reject'="" quit
	....set atype=$get(^TMP("HL7",$job,cnt1,FoundPV1,"PV1",2))
	....do CreateAdm(.reject,atype)
 
	... // check for 'incorrect' multiple tests in OBR records, file results against all tests
	...set count=$length(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",4),"~")
	...for tcnt=1:1:count set tests=$piece(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",4),"~",tcnt) quit:tests=""  do
	.... // check for previous parent reference and status
	....set prevParent=$select(parent=1:1,1:""),prevStatus=$select(parent=1:TestStatus,1:"")
	.... // check for use of parent reference
	....set parent=cnt3
	....if cnt3'=1,$translate($get(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",26)),"^")'="" set parent=1,tests=$piece(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",4),"~")
 
	.... // extract test status
	....set TestStatus=$piece($get(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",25)),"^")
	....if ##class(websys.StandardTypeItem).GetIdFromCodeOrDescription("ResultType",prevStatus)="K",prevParent=1,parent=1 set TestStatus=prevStatus
 
	.... // check if test sent
	....if tests="" do  quit
	.....set reject="No test sent on Order Id <"_OrdNum_">, Patient Id <"_RegMrn_">" do Reject^HL7Reject(reject,"R"),AckNak^HL7AckNak("AR",reject,"OBR^"_$get(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",1))_"^4",101)
 
	.... // extract parent authorising date
	....set datetime=$get(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",22)),date("AUTH")=$extract(datetime,1,8),time("AUTH")=$extract(datetime,9,12)
	....if $data(date("AUTH")) set date("AUTH")=$select(date("AUTH")?8N:$$DateConv^HL7Common2(.reject,"EI",date("AUTH")),1:"")
	....if $data(time("AUTH")) set time("AUTH")=$select(time("AUTH")?4N:$$TimeConv^HL7Common2("EI",$extract(time("AUTH"),1,2)_":"_$extract(time("AUTH"),3,4)),1:"")
 
	.... // check remaining details
	....set (intOrdNum,OrderedItem,OrderMaster)="" kill OrdDetail,res
	.... // use placer order number
	....set orddet=$$ExternalCode^HL7Common1(.reject,$piece(tests,"^"),$piece(tests,"^",2))
	....if reject'="" do Reject^HL7Reject(reject,"R"),AckNak^HL7AckNak("AR",reject,"OBR^"_$get(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",1))_"^4",103) quit
	....set OrderedItem=$piece(orddet,"^"),reclocat=$piece(orddet,"^",2)
 
	....if $$SubCatType^HL7Common11(OrderedItem)'="LAB" do
	..... // extract non-lab order collection date and time
	.....kill date("COL"),time("COL")
	.....set datetime=$get(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",8)),date("COL")=$extract(datetime,1,8),time("COL")=$extract(datetime,9,12)
	.....if $data(date("COL")) set date("COL")=$select(date("COL")?8N:$$DateConv^HL7Common2(.reject,"EI",date("COL")),1:"")
	.....if $data(time("COL")) set time("COL")=$select(time("COL")?4N:$$TimeConv^HL7Common2("EI",$extract(time("COL"),1,2)_":"_$extract(time("COL"),3,4)),1:"")
 
	....set specimen="" if $$SubCatType^HL7Common11(OrderedItem)="LAB" do
	..... // add/update specimen, primary body site detail
	.....set specimen=$piece(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",15),"^") if $piece(specimen,"&")="" quit
	.....do Specimen^HL7Common9($piece(specimen,"&"),$piece(specimen,"&",2),OrderedItem)
 
	....set OrderRow=$$CheckLab^HL7Common1(OrdNum,FillerNum,intAdmNum,RegMrn,OrderedItem,.provider,reclocat,"","",.date,.time,$piece(specimen,"&"))
	....set intOrdNum=$piece(OrderRow,"^"),OrderNew=$piece(OrderRow,"^",2)
	....if intOrdNum="" do  quit
	.....set reject="Unable to add order "_OrdNum_", test "_tests do Reject^HL7Reject(reject,"R")
 
	.... // get external info system
	....set ExternalSys=$$ExternalSys^HL7Common1(intOrdNum,.reject)
	....if reject'="" do Reject^HL7Reject(reject,"R"),AckNak^HL7AckNak("AR",reject,"OBR^"_$get(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",1))_"^4",207) quit
 
	.... // get HL7 result type : AT - Atomic
	.... //                       IM - Image
	.... //                       AI - Atomic & Image
	....set ResultType=$$ResultType^HL7Common1(intOrdNum)
 
	.... // extract text result type
	....set TextType="" if ResultType="IM" do  quit:reject'=""
	.....set TextType=$$TextType^HL7Common3(intOrdNum)
	.....if TextType="" set reject="No text result type setup against sub-category for image result on test "_$piece(tests,%1)_", order "_OrdNum do Reject^HL7Reject(reject,"R"),AckNak^HL7AckNak("AR",reject,"OBR^"_$get(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",1))_"^4",207)
 
	.... // perform result filing
	....set %routine=$$ResultFile^HL7Common1(ExternalSys)
	....if $length(%routine) xecute "d File^"_%routine_"("""_intOrdNum_""","""_TextType_""","""_tests_""","""_ResultType_""","""_TestStatus_""")"
 
	.... // add filler number to order
	....if FillerNum'="" do OrderUpdate^HL7Common3(intOrdNum,"FN",FillerNum)
 
	.... // add/update specimen site detail
	....if $$SubCatType^HL7Common11(OrderedItem)="LAB" do
	..... // add/update specimen on order
	.....set specimen=$piece(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",15),"^") if $piece(specimen,"&")'="" do
	......set sitecode=$piece(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",15),"^",4)
	......do OrderSpec^HL7Common9(intOrdNum,$piece(specimen,"&"),$piece(sitecode,"&"),$get(date("COL")),$get(time("COL")))
	.....set specsite=$get(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",15)),bodysite=$piece($piece(specsite,"^",4),"&",2),sitemod=$piece($piece(specsite,"^",5),"&",2)
	.....do OrderUpdate^HL7Common3(intOrdNum,"MF",bodysite_"^"_sitemod,"257^258")
 
	....if $$SubCatType^HL7Common11(OrderedItem)="LAB" do
	..... // update atomic lab episode request/received/collection date and time
	.....if ResultType="AT" do TestDateTime^HL7Common4,BuildEpisode^HL7Common4(OrdNum)
	..... // update lab order collection/received date and time
	.....do OrderUpdate^HL7Common3(intOrdNum,"MF",$select(OrderNew'="Y":$get(date("COL"))_"^"_$get(time("COL"))_"^",1:"")_$get(date("REC"))_"^"_$get(time("REC")),$select(OrderNew'="Y":"189^190^",1:"")_"218^219")
 
	....if $$SubCatType^HL7Common11(OrderedItem)'="LAB",OrderNew'="Y" do
	..... // update non-lab order collection date and time
	.....kill date,time
	.....set datetime=$get(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",8)),date("COL")=$extract(datetime,1,8),time("COL")=$extract(datetime,9,12)
	.....if $data(date("COL")) set date("COL")=$select(date("COL")?8N:$$DateConv^HL7Common2(.reject,"EI",date("COL")),1:"")
	.....if $data(time("COL")) set time("COL")=$select(time("COL")?4N:$$TimeConv^HL7Common2("EI",$extract(time("COL"),1,2)_":"_$extract(time("COL"),3,4)),1:"")
	.....do OrderUpdate^HL7Common3(intOrdNum,"MF",$get(date("COL"))_"^"_$get(time("COL")),"189^190")
 
	.... // add referring dr
	....do OrderUpdate^HL7Common3(intOrdNum,"MF",$get(provider("R")),"259")
 
	.... // add order authorised date/time and status
	....set statusdesc=##class(websys.StandardTypeItem).GetDescriptionFromCode("ResultType",$piece(^TMP("HL7",$job,cnt1,cnt2,parent,"OBR",25),"^"))
	....do OrderUpdate^HL7Common3(intOrdNum,"MF",statusdesc_"^"_$get(date("AUTH"))_"^"_$get(time("AUTH")),"262^263^264")
 
	....set updhosp=$$Hospital^HL7Common9($piece($get(^TMP("HL7",$job,"MSH",3)),"^"),"R")
 
	.... // add order user/date/time update detail
	....do OrderUpdate^HL7Common3(intOrdNum,"MF",HL7("USER")_"^"_+$h_"^"_$piece($h,",",2)_"^"_updhosp,"141^192^193^223")
 
	.... // add result user/date/time/hospital update detail
	....do OrderUpdate^HL7Common3(intOrdNum,"MF",+$h_"^"_$piece($h,",",2)_"^"_HL7("USER")_"^"_updhosp,"250^251^252^253")
 
	.... // update order with updated fields
	....if $data(OrdDetail) do OrderUpdate^HL7Common3(intOrdNum,"","","",1) kill OrdDetail
 
	.... // add copy-to doctors
	....if OrderNew="Y" do
	.....kill CopyToCare,CopyToRef
	.....set segid="ROL" for  set segid=$order(^TMP("HL7",$job,cnt1,cnt2,segid)) quit:segid=""  quit:segid'["ROL"  do
	......set i="" for  set i=$order(^TMP("HL7",$job,cnt1,cnt2,segid,4,i)) quit:i=""  do  if drfound'="" quit
	.......set copyto=$get(^TMP("HL7",$job,cnt1,cnt2,segid,4,i)) if $piece(copyto,"^")="" quit
	.......set doctor=$piece(copyto,"^"),drsystem=$piece(copyto,"^",9) if drsystem="MEDTRAK" set drsystem=""
	.......set drfound="" for drtype="C","R" do  quit:drfound'=""
	........set drfound=$$Provider^HL7Common5(doctor,drsystem,"","",drtype,"I")
	........if drfound'="",drtype="C" set CopyToCare($piece(drfound,$char(1)))=""
	........if drfound'="",drtype="R" set CopyToRef($piece(drfound,$char(1)))=""
	.......if drfound="" do  quit
	........set reject="Copy-To care provider/referring provider "_doctor_" sent on Order Id "_OrdNum_", not found in MedTrak"
	........do Reject^HL7Reject(reject,"N") set (reject,SQLCODE)=""
	.....if $data(CopyToCare)!($data(CopyToRef)) do
	......if $$CopyToDr^HL7Common7(intOrdNum,.CopyToCare,.CopyToRef)
 	.....kill CopyToCare,CopyToRef
 
	..if x=0,'SQLCODE do AckNak^HL7AckNak("AR","No results sent for Patient Id <"_RegMrn_">",,"OBR^"_$get(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",1))_"^4",100)
 
	// unlock all  - unable to unlock OEORD by itself
	zdeallocate
 
	if $data(rejected) do  kill rejected
	.set (drreject,reject)=""
	.set rejtype="" for  set rejtype=$order(rejected(rejtype)) quit:rejtype=""  do
	..set rejectx="" for  set rejectx=$order(rejected(rejtype,rejectx)) quit:rejectx=""  do
	...set drreject=drreject_$select($length(drreject):", ",1:"")_rejectx_" ("_rejected(rejtype,rejectx)_")"
	.if $length(drreject) set reject=$select($length(reject):", ",1:"")_"Ordering dr/s "_drreject_" not found in Medtrak"
	.do AckNak^HL7AckNak("AR",reject,"ORC^^12",101) set SQLCODE=100
 
	if 'SQLCODE do AckNak^HL7AckNak("AA")
	quit
 
CheckAdm	;; unsolicited result - find current admission number
CreateAdm(reject,atype) set atype=$get(atype),(found,intAdmNum,AdmNum)="" kill ^TMP($zname,$job,"Find-Adm"),Doctor
 
	set admtype="" for  set admtype=$order(^PAPERdr(intRegMrn,"ADM",admtype)) quit:admtype=""  do
	.set intnum=0 for  set intnum=$order(^PAPERdr(intRegMrn,"ADM",admtype,intnum)) quit:intnum=""  do
	..kill PAADM if $$SelectAdm(intnum) quit
	.. // do not include pre-admissions
	..quit:$get(PAADM(25))="P"
	..set admdate=$piece(PAADM(7),$char(1)) if admdate="" quit
	..set admtime=$piece(PAADM(8),$char(1)) if admtime="" set admtime=" "
	..set dischdate=$piece($get(PAADM(22)),$char(1)),dischtime=$piece($get(PAADM(23)),$char(1))
	..set ^TMP($zname,$job,"Find-Adm",admtype,admdate,admtime)=intnum_"^"_$get(PAADM(2))_"^"_dischdate_"^"_dischtime
 
	if $data(^TMP($zname,$job,"Find-Adm",atype)) do
	.set admdate="" for  set admdate=$order(^TMP($zname,$job,"Find-Adm",atype,admdate),-1) quit:admdate=""  do  quit:found
	..set admtime="" for  set admtime=$order(^TMP($zname,$job,"Find-Adm",atype,admdate,admtime),-1) quit:admtime=""  do  quit:found
	...set x=^TMP($zname,$job,"Find-Adm",atype,admdate,admtime),intnum=$piece(x,"^"),dischdate=$piece(x,"^",3),dischtime=$piece(x,"^",4)
	...if dischdate="" do
	....do DateCheck("ADM")
	...if dischdate'="" do
	....if date("DIS")=dischdate,(time("DIS")=dischtime) set found=1 quit
	....if date("ADM")>(admdate-1),(date("ADM")<(dischdate+1)) do
	.....if time("ADM")="" set found=1
	.....if date("ADM")=admdate,(date("ADM")=dischdate) do  quit
	......if time("ADM")>(admtime-1),((time("ADM")<($select(dischtime'="":dischtime+1,1:86400)))) set found=1
	.....if date("ADM")>admdate,(date("ADM")<dischdate) set found=1
	.....if date("ADM")=admdate,(time("ADM")>(admtime-1)) set found=1
	.....if date("ADM")=dischdate,(time("ADM")<(dischtime+1)) set found=1
	...if 'found do
	....set admdatetime=(admdate*86400)+admtime
	....for datetype="REQ","COL","REC","THT","PHA" do  if found quit
	.....if $data(date(datetype)),$get(date(datetype))'="" do
	...... // is date/time within a +/- 24 hr range
	......set othdatetime=($get(date(datetype))*86400)+$get(time(datetype))
	......if othdatetime-admdatetime<86401 set found=1 quit
	......if admdatetime-othdatetime>-86401 set found=1
	...if found set AdmNum=$piece(x,"^",2),intAdmNum=intnum
 
	// check for episode by doctor
	if 'found do
	.if $get(cnt1)'="",$get(cnt2)'="" do
	..set i="" for  set i=$order(^TMP("HL7",$job,cnt1,FoundPV1,"PV1",9,i)) quit:i=""  do  if drfound'="" quit
	...set OrderingDr=$get(^TMP("HL7",$job,cnt1,FoundPV1,"PV1",9,i)) if $piece(OrderingDr,"^")="" quit
	...set doctor=$piece(OrderingDr,"^"),drsystem=$piece(OrderingDr,"^",9) if drsystem="MEDTRAK" set drsystem=""
	...for drtype="C","R" do  if drfound'="" quit
	....set drfound=$$Provider^HL7Common5(doctor,drsystem,"","",drtype,"I")
	....if drfound'="" set Doctor(drtype)=$piece(drfound,$char(1))
	.if '$data(Doctor),$get(cnt1)'="",$get(cnt2)'="" do
	..set i="" for  set i=$order(^TMP("HL7",$job,cnt1,cnt2,"ORC",12,i)) quit:i=""  do  if drfound'="" quit
	...set OrderingDr=$get(^TMP("HL7",$job,cnt1,cnt2,"ORC",12,i)) if $piece(OrderingDr,"^")="" quit
	...set doctor=$piece(OrderingDr,"^"),drsystem=$piece(OrderingDr,"^",9) if drsystem="MEDTRAK" set drsystem=""
	...for drtype="C","R" do  if drfound'="" quit
	....set drfound=$$Provider^HL7Common5(doctor,drsystem,"","",drtype,"I")
	....if drfound'="" set Doctor(drtype)=$piece(drfound,$char(1))
	.if '$data(Doctor) quit
	.set intNum="" for  set intNum=$order(^PAPERdr(intRegMrn,"ADM",atype,intNum),-1) quit:intNum=""  do  quit:found
	..kill PAADM if $$SelectAdm(intNum) quit
	..if $data(Doctor("R")),PAADM(174)=Doctor("R") set found=1,intAdmNum=intNum,AdmNum=$get(PAADM(2)) quit
	..if $data(Doctor("C")),PAADM(12)=Doctor("C") set found=1,intAdmNum=intNum,AdmNum=$get(PAADM(2)) quit
 
	// check for episode by ward
	if 'found do
	.if $get(cnt1)=""!($get(cnt2)="")!($get(cnt3)="") quit
	.set i=$order(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",10,"")) if i="" quit
	.set ward=$piece($get(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",10,i)),"^") if ward="" quit
	.set hosp=$piece($get(^TMP("HL7",$job,cnt1,cnt2,cnt3,"OBR",10,i)),"^",14)
	.set WardRoomBed=$$WardRoomBed^HL7Common9(ward,"","",hosp),ward=$piece(WardRoomBed,"^")
	.set intNum="" for  set intNum=$order(^PAPERdr(intRegMrn,"ADM",atype,intNum),-1) quit:intNum=""  do  quit:found
	..kill PAADM if $$SelectAdm(intNum) quit
	..if PAADM(164)'=ward quit
	..set found=1,intAdmNum=intNum,AdmNum=$get(PAADM(2))
 
	// check for default episode
	if 'found do
	.set intNum="" for  set intNum=$order(^PAADMi("RefDoc",intRegMrn,HL7("DEFREFDR"),intNum),-1) quit:intNum=""  do  quit:found
	..kill PAADM if $$SelectAdm(intNum) quit
	..quit:$get(PAADM(9))'=HL7("DEFADMTYPE")
	..quit:$get(PAADM(5))'=HL7("DEFADMDEPT")
	..set found=1,intAdmNum=intNum,AdmNum=$get(PAADM(2))
 
	. // create default admission
	.if 'found do
	..set AdmDate=+$h,AdmTime=$piece($h,",",2),HL7Flag="Y"
	..set intAdmNum=$$ADMInsert^CPAAdm(intRegMrn,AdmDate,AdmTime,"",HL7("DEFADMDEPT"),HL7("DEFREFDR"),"","","","","","","",HL7("DEFADMTYPE"),"","","","","")
	..kill HL7Flag
	..if intAdmNum="" set reject="Unable to create/locate admission episode for unsolicited result order "_OrdNum_", Patient Id "_RegMrn do Reject^HL7Reject(reject,"R"),AckNak^HL7AckNak("AR",reject,"",207)
	..if intAdmNum'="" set AdmNum=$piece(^PAADM(intAdmNum),"^",81)
 
	kill ^TMP($zname,$job,"Find-Adm"),Doctor
	quit
 
	// check admission date
DateCheck(datetype) set datetype=$get(datetype)
	if date(datetype)>(admdate-1) do
	.if date(datetype)=admdate do  quit
	..if time(datetype)=""!(time(datetype)>(admtime-1)) set found=1
	.set found=1
	quit
 
	// select admission details
SelectAdm(intnum) set intnum=$get(intnum)
	&SQL(SELECT * INTO :PAADM() FROM PA_Adm WHERE PAADM_RowID =:intnum)
	quit SQLCODE
 
CheckStatus	;; compare atomic/image values and change status
StatusCheck(resType,rowid,status) new (resType,rowid,status,oldResults,newResults)
	set resType=$get(resType),rowid=$get(rowid),status=$get(status) kill new,oldstatus
 
	// atomic result checks
	if resType="ATOMIC" do
	. // compare test item values and change status
	.set epis=$piece(rowid,"||"),test=$piece(rowid,"||",2),seq=$piece(rowid,"||",3),tc=$piece(rowid,"||",4)
	.set oldstatus=$piece($get(oldResults(epis,1,test,seq,"DATA",tc)),"\",2)
	.merge new=^TEPI(epis,1,test,seq,"DATA",tc)
 
	. // new result
	.if '$data(oldResults(epis,1,test,seq,"DATA",tc)),$data(new) do  quit
	..set status=$select(status="K":"A",1:status)
	.if oldstatus="E",(status="A"!(status="K")) set status="A" quit
	.if status="E",(oldstatus="A"!(oldstatus="K")) quit
	.if $data(oldResults) do  if found quit
	..set found="" do
	...if oldstatus'="A",(oldstatus'="K") quit
	... // ranges
	...if $piece($get(oldResults(epis,1,test,seq,"DATA",tc)),"\",4,5)'=$piece(^TEPI(epis,1,test,seq,"DATA",tc),"\",4,5) set found=1 quit
	... // flags
	...if $piece($get(oldResults(epis,1,test,seq,"DATA",tc)),"\",8)'=$piece(^TEPI(epis,1,test,seq,"DATA",tc),"\",8) set found=1 quit
	... // sensitivity result
	...if $data(oldResults(epis,1,test,seq,"DATA",tc,"ANT")) do  if found quit
	....set ant="" for  set ant=$order(oldResults(epis,1,test,seq,"DATA",tc,"ANT",ant)) quit:ant=""  do
	.....if $piece($get(oldResults(epis,1,test,seq,"DATA",tc,"ANT",ant)),"\")'=$piece($get(^TEPI(epis,1,test,seq,"DATA",tc,"ANT",ant)),"\") set found=1
	...if $data(^TEPI(epis,1,test,seq,"DATA",tc,"ANT")) do  if found quit
	....set ant="" for  set ant=$order(^TEPI(epis,1,test,seq,"DATA",tc,"ANT",ant)) quit:ant=""  do
	.....if $piece($get(^TEPI(epis,1,test,seq,"DATA",tc,"ANT",ant)),"\")'=$piece($get(oldResults(epis,1,test,seq,"DATA",tc,"ANT",ant)),"\") set found=1
	... // comment
	...if $data(oldResults(epis,1,test,seq,"DATA",tc,"REM")) do  if found quit
	....set rem="" for  set rem=$order(oldResults(epis,1,test,seq,"DATA",tc,"REM",rem)) quit:rem=""  do
	.....if $piece($get(oldResults(epis,1,test,seq,"DATA",tc,"REM",rem)),"\")'=$piece($get(^TEPI(epis,1,test,seq,"DATA",tc,"REM",rem)),"\") set found=1
	...if $data(^TEPI(epis,1,test,seq,"DATA",tc,"REM")) do  if found quit
	....set rem="" for  set rem=$order(^TEPI(epis,1,test,seq,"DATA",tc,"REM",rem)) quit:rem=""  do
	.....if $piece($get(^TEPI(epis,1,test,seq,"DATA",tc,"REM",rem)),"\")'=$piece($get(oldResults(epis,1,test,seq,"DATA",tc,"REM",rem)),"\") set found=1
	... // retain old status if no change
	...if $piece($get(oldResults(epis,1,test,seq,"DATA",tc)),"\")=$piece($get(^TEPI(epis,1,test,seq,"DATA",tc)),"\") set found=2 quit
	... // normal result
	...if $piece($get(oldResults(epis,1,test,seq,"DATA",tc)),"\")'=$piece($get(^TEPI(epis,1,test,seq,"DATA",tc)),"\") set found=1 quit
	..if found=2 set status=oldstatus quit
	..if found=1 set status="K" quit
	..if 'found set status=$select(status="K":"A",1:status)
 
	// image result checks
	if resType="IMAGE" do
	.set change=""
	.merge oldResults=^OETR($piece(rowid,"||"),"SEC",$piece(rowid,"||",2),"REM") kill oldResults(0)
	.set oldRows=$order(oldResults(""),-1),newRows=$order(newResults(""),-1) if oldRows'=newRows set change=1
	.if 'change do
	..for i=1:1:oldRows do  quit:change
	...if $get(oldResults(i))'=$get(newResults(i)) set change=1
	.if change set status=$order(^OEC("RESST",0,"Code","C",""))
 
	quit status
 
	// log errors
Error	if $zerror["READ"!$zerror["WRITE" set WriteRead=1
	h 30 do AckNak^HL7AckNak("AR","Medtrak Cache Error","",207,"Cache Error: "_$zerror)
	do BACK^%ETN set $ztrap="Error^"_$zname
	set SQLCODE=100
	quit



